## Application config
spring.application.name=employee-service
server.servlet.context-path=/rest
#
#
## Database config
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
#
#
##JPA config
# "spring.jpa.show-sql" --- works through "println" on console.
# see https://www.baeldung.com/sql-logging-spring-boot
# To work through the "logger" need to set "logging.level" property
# or tune logback.xml
spring.jpa.show-sql=false
#
# Open Session In View Anti-Pattern
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=create-drop
#
# WARNING !!!  see https://www.baeldung.com/jpa-hibernate-batch-insert-update
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
#
## Jackson JSON config
spring.jackson.serialization.write-dates-as-timestamps=false
#
#
## Actuator config
management.endpoints.enabled-by-default=false
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=health,info,metrics
management.metrics.web.server.auto-time-requests=false
#
#
## Logger config
logging.file=employee_app.log
#logging.level.org.springframework.test.context.cache=debug
#
# see https://www.baeldung.com/sql-logging-spring-boot
# For fine tuning see: logback.xml
#
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#
#logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
#logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
#
#
## Apache CXF config
cxf.path=/cxf
#cxf.jaxrs.component-scan=true
#cxf.servlet.init.service-list-path=/info
#cxf.jaxrs.component-scan-packages=com.samsolution.demo.jaxrs.controller.impl

##
#
my.rabbitmq.queue=my_message_queue
